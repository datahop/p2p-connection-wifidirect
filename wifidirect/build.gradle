plugins {
    id 'com.android.library'
    id 'maven-publish'

}

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.1"

    defaultConfig {
        minSdkVersion 29
        targetSdkVersion 29

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    compileOnly files('libs/datahop.aar')
}


def getVersionName = {
    return "0.0.1"  // Replace with version Name
}

def getArtifactId = {
    return "wifidirect" // Replace with library name ID
}

def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties")))

afterEvaluate {
    publishing {
        publications {
            bar(MavenPublication) {
                groupId 'network.datahop.libraries' // Replace with group ID
                artifactId getArtifactId()
                version getVersionName()
                artifact("$buildDir/outputs/aar/${getArtifactId()}-release.aar")
            }
        }

        repositories {
            maven {
                name = "GitHubPackages"
                /** Configure path of your package repository on Github
                 *  Replace GITHUB_USERID with your/organisation Github userID and REPOSITORY with the repository name on GitHub
                 */
                url = uri("https://maven.pkg.github.com/datahop/p2p-connection-wifidirect")

                credentials {
                    /**Create github.properties in root project folder file with gpr.usr=GITHUB_USER_ID  & gpr.key=PERSONAL_ACCESS_TOKEN**/
                    username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                    password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
                }
            }
        }
    }
}